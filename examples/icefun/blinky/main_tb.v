// Generated by ChatGPT using the Apio's Testbench Rules.
// Formatted by `apio format`.

`default_nettype none

module test_Main;
  reg CLK = 0;
  wire [7:0] ROWS;
  wire [3:0] COLS;

  // Rule 6: Set to high on first error
  reg tb_error = 0;

  Main #(.N(3)) dut (
    .CLK(CLK),
    .ROWS(ROWS),
    .COLS(COLS)
  );

  // Clock: 10ns period (12MHz is ~83.3ns, simplified for sim)
  always #5 CLK = ~CLK;

  initial begin
    // Rule 1: Use $dumpvars with module name
    $dumpvars(0, test_Main);

    #1;
    if (ROWS !== 8'b11111101 || COLS !== 4'b1110) begin
      $display("ERROR at t=0: Expected ROWS=11111101, COLS=1110, got ROWS=%b, COLS=%b", ROWS, COLS);
      tb_error = 1;
      `ifndef INTERACTIVE_SIM
        $fatal;
      `endif
    end

    // === Toggle 1 ===
    repeat (3) @(posedge CLK); #1;
    if (ROWS !== 8'b11111110) begin
      $display("ERROR at toggle 1: Expected ROWS=11111110, got ROWS=%b", ROWS);
      tb_error = 1;
      `ifndef INTERACTIVE_SIM
        $fatal;
      `endif
    end

    // === Toggle 2 ===
    repeat (3) @(posedge CLK); #1;
    if (ROWS !== 8'b11111101) begin
      $display("ERROR at toggle 2: Expected ROWS=11111101, got ROWS=%b", ROWS);
      tb_error = 1;
      `ifndef INTERACTIVE_SIM
        $fatal;
      `endif
    end

    // === Toggle 3 ===
    repeat (3) @(posedge CLK); #1;
    if (ROWS !== 8'b11111110) begin
      $display("ERROR at toggle 3: Expected ROWS=11111110, got ROWS=%b", ROWS);
      tb_error = 1;
      `ifndef INTERACTIVE_SIM
        $fatal;
      `endif
    end

    // Rule 5: End of simulation message
    $display("End of simulation");
    $finish;
  end
endmodule

